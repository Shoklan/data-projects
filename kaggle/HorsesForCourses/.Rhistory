install.packages('knitr')
dir()
setwd('Code'); dir()
setwd('Kaggle'); dir()
setwd('DCMetroCrimeData')
dir()
data<- fread("crime_homicide_subset.csv")
colnames( data )
library(data.table)
library(ggplot2)
data<- fread("crime_homicide_subset.csv")
library(stringr)
colnames( data )
for(i in 1:ncol(data)){ print( paste(colnames(data)[i], ' ', sum(is.na(data[,i, with = F]))))}
for(i in 1:ncol(data)){ print(unique(data[,i, with = F]))}
data$REPORT_DAT<- as.POSIXct(data$REPORT_DAT, format = '%m/%d/%Y %H:%M') # don't need to adjust timezone since DC is EST
data[, .(year := NULL,
week := NULL,
day  := NULL,
hour := NULL)]
yearScale <- data.table( year = c(2011, 2012, 2013, 2014, 2015, 2016), count = as.numeric(0))
yearScale$count[1] <- nrow( filter(data, REPORT_DAT < as.POSIXct('2011/6/1')) )
yearScale$count[2] <- nrow( filter(data, REPORT_DAT < as.POSIXct('2012/6/1') &  REPORT_DAT > as.POSIXct('2012/1/1')) )
yearScale$count[3] <- nrow( filter(data, REPORT_DAT < as.POSIXct('2013/6/1') &  REPORT_DAT >= as.POSIXct('2013/1/1')) )
yearScale$count[4] <- nrow( filter(data, REPORT_DAT < as.POSIXct('2014/6/1') &  REPORT_DAT >= as.POSIXct('2014/1/1')) )
yearScale$count[5] <- nrow( filter(data, REPORT_DAT < as.POSIXct('2015/6/1') &  REPORT_DAT >= as.POSIXct('2015/1/1')) )
yearScale$count[6] <- nrow( filter(data, REPORT_DAT > as.POSIXct('2016/1/1') &  REPORT_DAT >= as.POSIXct('2016/1/1')) )
colnames( data )
data$REPORT_DAT<- as.POSIXct(data$REPORT_DAT, format = '%m/%d/%Y %H:%M') # don't need to adjust timezone since DC is EST
data$REPORT_DAT
yearScale <- data.table( year = c(2011, 2012, 2013, 2014, 2015, 2016), count = as.numeric(0))
yearScale$count[1] <- nrow( filter(data, REPORT_DAT < as.POSIXct('2011/6/1')) )
yearScale$count[2] <- nrow( filter(data, REPORT_DAT < as.POSIXct('2012/6/1') &  REPORT_DAT > as.POSIXct('2012/1/1')) )
yearScale$count[3] <- nrow( filter(data, REPORT_DAT < as.POSIXct('2013/6/1') &  REPORT_DAT >= as.POSIXct('2013/1/1')) )
yearScale$count[4] <- nrow( filter(data, REPORT_DAT < as.POSIXct('2014/6/1') &  REPORT_DAT >= as.POSIXct('2014/1/1')) )
yearScale$count[5] <- nrow( filter(data, REPORT_DAT < as.POSIXct('2015/6/1') &  REPORT_DAT >= as.POSIXct('2015/1/1')) )
yearScale$count[6] <- nrow( filter(data, REPORT_DAT > as.POSIXct('2016/1/1') &  REPORT_DAT >= as.POSIXct('2016/1/1')) )
library(dplyr)
yearScale <- data.table( year = c(2011, 2012, 2013, 2014, 2015, 2016), count = as.numeric(0))
yearScale$count[1] <- nrow( filter(data, REPORT_DAT < as.POSIXct('2011/6/1')) )
yearScale$count[2] <- nrow( filter(data, REPORT_DAT < as.POSIXct('2012/6/1') &  REPORT_DAT > as.POSIXct('2012/1/1')) )
yearScale$count[3] <- nrow( filter(data, REPORT_DAT < as.POSIXct('2013/6/1') &  REPORT_DAT >= as.POSIXct('2013/1/1')) )
yearScale$count[4] <- nrow( filter(data, REPORT_DAT < as.POSIXct('2014/6/1') &  REPORT_DAT >= as.POSIXct('2014/1/1')) )
yearScale$count[5] <- nrow( filter(data, REPORT_DAT < as.POSIXct('2015/6/1') &  REPORT_DAT >= as.POSIXct('2015/1/1')) )
yearScale$count[6] <- nrow( filter(data, REPORT_DAT > as.POSIXct('2016/1/1') &  REPORT_DAT >= as.POSIXct('2016/1/1')) )
g<- ggplot(yearScale, aes( x = year, y = count)) + geom_point(size = 4) +  geom_smooth(se = TRUE)
g <- g + ggtitle('Crime Within First 5 Months') + labs(x = 'Year of Crimes', y = 'Count of Crime')
print( g )
ggplot(data, aes( factor(year), fill = factor(OFFENSE) )) + geom_bar(position = 'dodge')
ggplot(data, aes( factor(year), fill = factor(OFFENSE) )) + geom_bar(position = 'dodge') + guide_legend(title = 'Type of Crime')
ggplot(data, aes( factor(year), fill = factor(OFFENSE) )) + geom_bar(position = 'dodge') + guide(fill = guide_legend(title = 'Type of Crime'))
ggplot(data, aes( factor(year), fill = factor(OFFENSE) )) + geom_bar(position = 'dodge') + guides(fill = guide_legend(title = 'Type of Crime'))
g<- ggplot(data, aes( factor(year), fill = factor(OFFENSE) )) + geom_bar(position = 'dodge')
g <- g + + guides(fill = guide_legend(title = 'Type of Crime')) + labs( x = 'Year', y = 'Frequency')
print( g )
g<- ggplot(data, aes( factor(year), fill = factor(OFFENSE) )) + geom_bar(position = 'dodge')
g <- g + guides(fill = guide_legend(title = 'Type of Crime')) + labs( x = 'Year', y = 'Frequency')
print( g )
g<- ggplot(data, aes( factor(year), fill = factor(OFFENSE) )) + geom_bar(position = 'dodge')
g <- g + guides(fill = guide_legend(title = 'Type of Crime')) + labs( x = 'Year', y = 'Frequency') + ggtitle('Crime Type By Year')
print( g )
data[, .N, by = .(year, OFFENSE)]
filter(data[, .N, by = .(year, OFFENSE)], OFFENSE == 'HOMICIDE')
cor(filter(data[, .N, by = .(year, OFFENSE)], OFFENSE == 'HOMICIDE')
)
filter(data[, .N, by = .(year, OFFENSE)], OFFENSE == 'HOMICIDE')[,'N']
cor( filter(data[, .N, by = .(year, OFFENSE)], OFFENSE == 'HOMICIDE')[,'N'])
?cor
districtSubset<- data[, .(count = .N), by = .(year, DISTRICT)]
g<- ggplot(districtSubset, aes(x = year, y = count, group = DISTRICT, color = DISTRICT)) + geom_line() + scale_color_gradient(low = 'yellow', high = 'red')
g <- g + ggtitle("Danger of Districts") + labs(x = 'Year', y = 'Offenses')
print( g )
districtSubset<- data[, .(count = .N), by = .(year, DISTRICT)]
g<- ggplot(districtSubset, aes(x = year, y = count, group = DISTRICT, color = DISTRICT)) + geom_line()
g <- g + + scale_color_gradient(low = 'yellow', high = 'red')
g <- g + ggtitle("Danger of Districts") + labs(x = 'Year', y = 'Offenses')
print( g )
districtSubset<- data[, .(count = .N), by = .(year, DISTRICT)]
g<- ggplot(districtSubset, aes(x = year, y = count, group = DISTRICT, color = DISTRICT)) + geom_line()
g <- g  + scale_color_gradient(low = 'yellow', high = 'red')
g <- g + ggtitle("Danger of Districts") + labs(x = 'Year', y = 'Offenses')
print( g )
outliers<- filter(data, lat< 38.4)
outliers
qplot(data$lat, data$long)
qplot(data$lat, data$long, size = 7)
qplot(data$lat, data$long, size = 9)
qplot(data$lat, data$long, size = 9)
qplot(data$lat, data$long, size = 9, color = 'green')
qplot(data$lat, data$long, size = 9, colour = 'green')
?qplot
qplot(data$lat, data$long, size = 9)
qplot(data$lat, data$long, size = 9) + guides( fill = F)
qplot(data$lat, data$long, size = 9) + guides( fill = FALSE)
qplot(data$lat, data$long, size = 9, fill = FALSE)
qplot(data$lat, data$long, size = 9)
outliers$DISTRICT
outliers$year
data<- fread("crime_homicide_subset.csv")
?setkey
library(data.table) #fread
library(ggplot2)
library(dplyr)
# data imports
dataNamesVector <- c('conditions', 'forms', 'horses', 'markets', 'odds', 'riders', 'runners', 'weathers')
for( item in dataNamesVector ){ assign( item, fread( file.path( 'data', paste0( item, '.csv' ) ))) }
dir
dir()
setwd('..')
dir()
setwd('HorsesForCourses')
dir()
library(data.table) #fread
library(ggplot2)
library(dplyr)
dataNamesVector <- c('conditions', 'forms', 'horses', 'markets', 'odds', 'riders', 'runners', 'weathers')
for( item in dataNamesVector ){ assign( item, fread( file.path( 'data', paste0( item, '.csv' ) ))) }
# data imports
dataNamesVector <- c('conditions', 'forms', 'horses', 'markets', 'odds', 'riders', 'runners', 'weathers')
for( item in dataNamesVector ){ assign( item, fread( file.path( 'data', paste0( item, '.csv' ) ))) }
for( item in dataNamesVector )setkey( item )
for( item in dataNamesVector ){ print( colnames( item ))}
colnames( conditions )
colnames( forms )
colnames( conditions )
colnames( forms )
colnames( horses )
colnames( markets )
colnames( odds )
colnames( riders )
colnames( runners )
colnames( weathers )
conditions
forms
forms[, c(id)]
forms$id
weather
weather
weathers
?gsub
weatherTemp<- weathers
weatherTemp<- weathers
marketTemp<- markets
weatherTemp
marketTemp$weather_id
length( weatherTemp)
nrow( weatherTemp)
for(i in 1:nrow( weatherTemp ){ print( weatherTemp[i])}
for(i in 1:nrow( weatherTemp )){ print( weatherTemp[i])}
for(i in 1:nrow( weatherTemp )){ print( weatherTemp[1,i])}
for(i in 1:nrow( weatherTemp )){ print( weatherTemp[i, 1])}
for(i in 1:nrow( weatherTemp )){ print( weatherTemp[i, 1, with = F])}
for(i in 1:nrow( weatherTemp )){ print( weatherTemp[i, 2, with = F])}
weatherTemp
weatherTemp[1,1]
marketTemp$weather_id
gsub( weatherTemp[1,1, with = F], weatherTemp[1,2, with = F], marketTemp$weather_id)
for(i in 1:nrow( weatherTemp )){ marketTemp$weather_id <- gsub( weatherTemp[i,1, with = F], weatherTemp[i,2, with = F], marketTemp$weather_id) }
marketTemp$weather_id
for(i in 1:nrow( weatherTemp )){ marketTemp$weather_id <- gsub( weatherTemp[i,1, with = F], weatherTemp[i,2, with = F], marketTemp$weather_id) }
marketTemp$weather_id
weatherTemp<- weathers
marketTemp<- markets
marketTemp$weather_id
for(i in 1:nrow( weatherTemp )){ marketTemp$weather_id <- gsub( weatherTemp[i,1, with = F], weatherTemp[i,2, with = F], marketTemp$weather_id) }
marketTemp$weather_id
riders
riders
conditions
horses
nrow( conditions )
nrow( forms )
nrow( horses )
nrow( markets )
nrow( odds )
nrow( riders )
nrow( runners )
nrow( weathers )
conditions
conditions
conditionsTemp<- conditions
markets$condition_id
for( i in 1:nrow( conditions)){ markets$conditions_id <- gsub( conditions[i,1, with = F], conditions[i,2, with = F], markets$condition_id) }
markets$condition_id
conditions[i,1, with = F]
conditions[i,2, with = F]
for( i in 1:nrow( conditions)){ markets$condition_id <- gsub( conditions[i,1, with = F], conditions[i,2, with = F], markets$condition_id) }
markets$condition_id
markets$condition_id
runners
riders
runners$rider_id
riders
setkey(riders)
setkey(riders, id)
setkey(runners, rider_id)
temp<- runners[ riders ]
temp
temp$rider_id
temp$sex
unique(forms$horse_id)
sum( is.na((forms$horse_id)))
setkey( forms, horse_id)
forms<- forms[ horses]
colnames( forms )
runners
runners$market_id
setkey( runners, market_id )
setkey( markets, id)
markets<- markets[ runners]
colnames( markets)
rm( runners )
rm( horses )
rm( riders )
rm( conditions )
rm( weathers)
rm( conditionsTemp)
rm( marketTemp)
rm( weatherTemp)
runners$rider_id
markets$rider_id
odds
odds$runner_id
markets$i.id
odds$runner_id
setkey( odds, runner_id)
setkey( markets, i.id)
markets<- markets[ odds ]
rm( odds )
colnames( markets )
rm( temp )
setkey( forms, market_id)
setkey( markets, id)
dataset<- markets[ forms ]
setkey( markets, id)
setkey( forms, market_id)
dataset<- markets[ forms ]
nrow( markets )
unique( markets$id)
length( unique( markets$id))
unique( markets$id)
length( unique( markets$id))
nrow( markets )
markets$id
colnames( forms )
colnames( markets )
nrow( markets )
nrow( forms )
dataset<- forms[ markets]
